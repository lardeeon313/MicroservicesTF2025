// <auto-generated />
using System;
using DepotService.Infraestructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DepotService.API.Migrations
{
    [DbContext(typeof(DepotDbContext))]
    partial class DepotDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DepotService.Domain.Entities.DepotOrderEntity", b =>
                {
                    b.Property<int>("DepotOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("AssignedDepotTeamId")
                        .HasColumnType("int");

                    b.Property<Guid?>("AssignedOperatorId")
                        .HasColumnType("char(36)");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("char(36)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DeliveryDetail")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RejectionReason")
                        .HasColumnType("longtext");

                    b.Property<int>("SalesOrderId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("DepotOrderId");

                    b.HasIndex("AssignedDepotTeamId");

                    b.ToTable("DepotOrders");
                });

            modelBuilder.Entity("DepotService.Domain.Entities.DepotOrderItemEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DepotOrderEntityId")
                        .HasColumnType("int");

                    b.Property<int?>("DepotOrderMissingId")
                        .HasColumnType("int");

                    b.Property<bool>("IsReady")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("PackagingType")
                        .HasColumnType("longtext");

                    b.Property<string>("ProductBrand")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("SalesOrderItemId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("DepotOrderEntityId");

                    b.HasIndex("DepotOrderMissingId");

                    b.ToTable("DepotOrderItems");
                });

            modelBuilder.Entity("DepotService.Domain.Entities.DepotOrderMissing", b =>
                {
                    b.Property<int>("MissingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DepotOrderId")
                        .HasColumnType("int");

                    b.Property<string>("DescriptionResolution")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("MissingDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("MissingDescription")
                        .HasColumnType("longtext");

                    b.Property<string>("MissingReason")
                        .HasColumnType("longtext");

                    b.Property<int>("SalesOrderId")
                        .HasColumnType("int");

                    b.HasKey("MissingId");

                    b.HasIndex("DepotOrderId");

                    b.ToTable("DepotOrderMissings");
                });

            modelBuilder.Entity("DepotService.Domain.Entities.DepotOrderMissingItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DepotOrderItemId")
                        .HasColumnType("int");

                    b.Property<int>("MissingQuantity")
                        .HasColumnType("int");

                    b.Property<int>("OrderMissingId")
                        .HasColumnType("int");

                    b.Property<string>("Packaging")
                        .HasColumnType("longtext");

                    b.Property<string>("ProductBrand")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("DepotOrderItemId");

                    b.HasIndex("OrderMissingId");

                    b.ToTable("DepotOrderMissingItem");
                });

            modelBuilder.Entity("DepotService.Domain.Entities.DepotTeamAssignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("AssignedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DepotTeamId")
                        .HasColumnType("int");

                    b.Property<Guid>("OperatorUserId")
                        .HasColumnType("char(36)");

                    b.Property<string>("RoleInTeam")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("DepotTeamId");

                    b.ToTable("TeamAssignments");
                });

            modelBuilder.Entity("DepotService.Domain.Entities.DepotTeamEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("TeamDescription")
                        .HasColumnType("longtext");

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("DepotTeams");
                });

            modelBuilder.Entity("DepotService.Domain.Entities.DepotOrderEntity", b =>
                {
                    b.HasOne("DepotService.Domain.Entities.DepotTeamEntity", "AssignedDepotTeam")
                        .WithMany()
                        .HasForeignKey("AssignedDepotTeamId");

                    b.Navigation("AssignedDepotTeam");
                });

            modelBuilder.Entity("DepotService.Domain.Entities.DepotOrderItemEntity", b =>
                {
                    b.HasOne("DepotService.Domain.Entities.DepotOrderEntity", "DepotOrderEntity")
                        .WithMany("Items")
                        .HasForeignKey("DepotOrderEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DepotService.Domain.Entities.DepotOrderMissing", "DepotOrderMissing")
                        .WithMany()
                        .HasForeignKey("DepotOrderMissingId");

                    b.Navigation("DepotOrderEntity");

                    b.Navigation("DepotOrderMissing");
                });

            modelBuilder.Entity("DepotService.Domain.Entities.DepotOrderMissing", b =>
                {
                    b.HasOne("DepotService.Domain.Entities.DepotOrderEntity", "DepotOrder")
                        .WithMany("Missings")
                        .HasForeignKey("DepotOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DepotOrder");
                });

            modelBuilder.Entity("DepotService.Domain.Entities.DepotOrderMissingItem", b =>
                {
                    b.HasOne("DepotService.Domain.Entities.DepotOrderItemEntity", "DepotOrderItem")
                        .WithMany()
                        .HasForeignKey("DepotOrderItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DepotService.Domain.Entities.DepotOrderMissing", "DepotOrderMissing")
                        .WithMany("MissingItems")
                        .HasForeignKey("OrderMissingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DepotOrderItem");

                    b.Navigation("DepotOrderMissing");
                });

            modelBuilder.Entity("DepotService.Domain.Entities.DepotTeamAssignment", b =>
                {
                    b.HasOne("DepotService.Domain.Entities.DepotTeamEntity", "depotTeamEntity")
                        .WithMany("Assignments")
                        .HasForeignKey("DepotTeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("depotTeamEntity");
                });

            modelBuilder.Entity("DepotService.Domain.Entities.DepotOrderEntity", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("Missings");
                });

            modelBuilder.Entity("DepotService.Domain.Entities.DepotOrderMissing", b =>
                {
                    b.Navigation("MissingItems");
                });

            modelBuilder.Entity("DepotService.Domain.Entities.DepotTeamEntity", b =>
                {
                    b.Navigation("Assignments");
                });
#pragma warning restore 612, 618
        }
    }
}
