// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SalesService.Infraestructure;

#nullable disable

namespace SalesService.API.Migrations
{
    [DbContext(typeof(SalesDbContext))]
    partial class SalesDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SalesService.Domain.Entities.CustomerEntity.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("SatisfactionDescription")
                        .HasColumnType("longtext");

                    b.Property<int?>("SatisfactionScore")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("SalesService.Domain.Entities.OrderEntity.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("varchar(450)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeliveryDetail")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("ModifiedStatusDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("PaymentReceipt")
                        .HasColumnType("longtext");

                    b.Property<int?>("PaymentType")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("SalesService.Domain.Entities.OrderEntity.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("PackagingType")
                        .HasColumnType("longtext");

                    b.Property<string>("ProductBrand")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("SalesService.Domain.Entities.OrderEntity.OrderMissing", b =>
                {
                    b.Property<int>("MissingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DescriptionResolution")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("MissingDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("MissingDescription")
                        .HasColumnType("longtext");

                    b.Property<string>("MissingReason")
                        .HasColumnType("longtext");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("MissingId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderMissings");
                });

            modelBuilder.Entity("SalesService.Domain.Entities.OrderEntity.OrderMissingItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("MissingQuantity")
                        .HasColumnType("int");

                    b.Property<int>("OrderItemId")
                        .HasColumnType("int");

                    b.Property<int>("OrderMissingId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderItemId");

                    b.HasIndex("OrderMissingId");

                    b.ToTable("OrderMissingItems");
                });

            modelBuilder.Entity("SalesService.Domain.Entities.OrderEntity.Order", b =>
                {
                    b.HasOne("SalesService.Domain.Entities.CustomerEntity.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("SalesService.Domain.Entities.OrderEntity.OrderItem", b =>
                {
                    b.HasOne("SalesService.Domain.Entities.OrderEntity.Order", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("SalesService.Domain.Entities.OrderEntity.OrderMissing", b =>
                {
                    b.HasOne("SalesService.Domain.Entities.OrderEntity.Order", "Order")
                        .WithMany("MissingReports")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("SalesService.Domain.Entities.OrderEntity.OrderMissingItem", b =>
                {
                    b.HasOne("SalesService.Domain.Entities.OrderEntity.OrderItem", "OrderItem")
                        .WithMany()
                        .HasForeignKey("OrderItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SalesService.Domain.Entities.OrderEntity.OrderMissing", "OrderMissing")
                        .WithMany("MissingItems")
                        .HasForeignKey("OrderMissingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderItem");

                    b.Navigation("OrderMissing");
                });

            modelBuilder.Entity("SalesService.Domain.Entities.OrderEntity.Order", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("MissingReports");
                });

            modelBuilder.Entity("SalesService.Domain.Entities.OrderEntity.OrderMissing", b =>
                {
                    b.Navigation("MissingItems");
                });
#pragma warning restore 612, 618
        }
    }
}
